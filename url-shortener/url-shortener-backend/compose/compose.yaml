version: '3.8'
services:
  mongo:
    image: 'mongo:6-jammy'
    container_name: mongo
    environment:
      MONGO_INITDB_DATABASE: shortener_db
      MONGO_INITDB_ROOT_PASSWORD: secret
      MONGO_INITDB_ROOT_USERNAME: root
      MONGODB_USER: shortener
      MONGODB_PASSWORD: short_pass
    ports:
      - '27017:27017'
    networks:
      - MONGO
    volumes:
      - type: volume
        source: MONGO_DATA
        target: /data/db
      - type: volume
        source: MONGO_CONFIG
        target: /data/configdb
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: secret
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: "27017"
    ports:
      - "8081:8081"
    networks:
      - MONGO
    depends_on:
      - mongo

  redis-node-0:
    image: bitnami/redis-cluster:7.2
    environment:
      - REDIS_PASSWORD=redis_pass
      - REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    ports:
      - '6379:6379'
    volumes:
      - 'redis_data_0:/bitnami/redis/data'
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "$REDIS_PASSWORD", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  redis-node-1:
    image: bitnami/redis-cluster:7.2
    environment:
      - REDIS_PASSWORD=redis_pass
      - REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5
    ports:
      - '6380:6379'
    volumes:
      - 'redis_data_1:/bitnami/redis/data'
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "$REDIS_PASSWORD", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  redis-node-2:
    image: bitnami/redis-cluster:7.2
    environment:
      - REDIS_PASSWORD=redis_pass
      - REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5
    ports:
      - '6381:6379'
    volumes:
      - 'redis_data_2:/bitnami/redis/data'
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "$REDIS_PASSWORD", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  redis-node-3:
    image: bitnami/redis-cluster:7.2
    environment:
      - REDIS_PASSWORD=redis_pass
      - REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5
    ports:
      - '6382:6379'
    volumes:
      - 'redis_data_3:/bitnami/redis/data'
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "$REDIS_PASSWORD", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  redis-node-4:
    image: bitnami/redis-cluster:7.2
    environment:
      - REDIS_PASSWORD=redis_pass
      - REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5
    ports:
      - '6383:6379'
    volumes:
      - 'redis_data_4:/bitnami/redis/data'
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "$REDIS_PASSWORD", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  redis-node-5:
    image: bitnami/redis-cluster:7.2
    environment:
      - REDIS_PASSWORD=redis_pass
      - REDIS_CLUSTER_REPLICAS=1
      - REDISCLI_AUTH=redis_pass
      - REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5
      - REDIS_CLUSTER_CREATOR=yes
    ports:
      - '6384:6379'
    depends_on:
      - redis-node-0
      - redis-node-1
      - redis-node-2
      - redis-node-3
      - redis-node-4
    volumes:
      - 'redis_data_5:/bitnami/redis/data'
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "$REDIS_PASSWORD", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

networks:
  MONGO:
    name: MONGO

volumes:
  MONGO_DATA:
    name: MONGO_DATA
  MONGO_CONFIG:
    name: MONGO_CONFIG
  redis_data_0:
    driver: local
  redis_data_1:
    driver: local
  redis_data_2:
    driver: local
  redis_data_3:
    driver: local
  redis_data_4:
    driver: local
  redis_data_5:
    driver: local