version: '3.8'
services:
  mongodb-sharded:
    image: docker.io/bitnami/mongodb-sharded:7.0
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-sharded
      - MONGODB_SHARDING_MODE=mongos
      - MONGODB_CFG_PRIMARY_HOST=mongodb-cfg-primary
      - MONGODB_CFG_REPLICA_SET_NAME=mongo_cfg_replicaset
      - MONGODB_REPLICA_SET_KEY=replicasetkey123
      - MONGODB_ROOT_PASSWORD=secret
      - MONGODB_ROOT_USER=root
      - MONGODB_DATABASE=shortener_db
      - MONGODB_USERNAME=shortener
      - MONGODB_PASSWORD=short_pass
    ports:
      - "27017:27017"
    volumes:
      - ./scripts:/scripts:ro

  mongodb-shard0-primary:
    image: docker.io/bitnami/mongodb-sharded:7.0
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-shard0-primary
      - MONGODB_SHARDING_MODE=shardsvr
      - MONGODB_MONGOS_HOST=mongodb-sharded
      - MONGODB_ROOT_PASSWORD=secret
      - MONGODB_ROOT_USER=root
      - MONGODB_DATABASE=shortener_db
      - MONGODB_USERNAME=shortener
      - MONGODB_PASSWORD=short_pass
      - MONGODB_REPLICA_SET_MODE=primary
      - MONGODB_REPLICA_SET_KEY=replicasetkey123
      - MONGODB_REPLICA_SET_NAME=shard0
    volumes:
      - 'shard0_data:/bitnami'

  mongodb-shard0-secondary:
    image: docker.io/bitnami/mongodb-sharded:7.0
    depends_on:
      - mongodb-shard0-primary
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-shard0-secondary
      - MONGODB_REPLICA_SET_MODE=secondary
      - MONGODB_PRIMARY_HOST=mongodb-shard0-primary
      - MONGODB_INITIAL_PRIMARY_ROOT_USER=root
      - MONGODB_PRIMARY_ROOT_PASSWORD=secret
      - MONGODB_REPLICA_SET_KEY=replicasetkey123
      - MONGODB_SHARDING_MODE=shardsvr
      - MONGODB_REPLICA_SET_NAME=shard0
    volumes:
      - 'shard0_sec_data:/bitnami'

  mongodb-shard1-primary:
    image: docker.io/bitnami/mongodb-sharded:7.0
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-shard1-primary
      - MONGODB_SHARDING_MODE=shardsvr
      - MONGODB_MONGOS_HOST=mongodb-sharded
      - MONGODB_ROOT_PASSWORD=secret
      - MONGODB_ROOT_USER=root
      - MONGODB_DATABASE=shortener_db
      - MONGODB_USERNAME=shortener
      - MONGODB_PASSWORD=short_pass
      - MONGODB_REPLICA_SET_MODE=primary
      - MONGODB_REPLICA_SET_KEY=replicasetkey123
      - MONGODB_REPLICA_SET_NAME=shard1
    volumes:
      - 'shard1_data:/bitnami'


  mongodb-shard1-secondary:
    image: docker.io/bitnami/mongodb-sharded:7.0
    depends_on:
      - mongodb-shard1-primary
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-shard1-secondary
      - MONGODB_REPLICA_SET_MODE=secondary
      - MONGODB_PRIMARY_HOST=mongodb-shard1-primary
      - MONGODB_INITIAL_PRIMARY_ROOT_USER=root
      - MONGODB_PRIMARY_ROOT_PASSWORD=secret
      - MONGODB_REPLICA_SET_KEY=replicasetkey123
      - MONGODB_SHARDING_MODE=shardsvr
      - MONGODB_REPLICA_SET_NAME=shard1
    volumes:
      - 'shard1_sec_data:/bitnami'

  mongodb-shard2-primary:
    image: docker.io/bitnami/mongodb-sharded:7.0
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-shard2-primary
      - MONGODB_SHARDING_MODE=shardsvr
      - MONGODB_MONGOS_HOST=mongodb-sharded
      - MONGODB_ROOT_PASSWORD=secret
      - MONGODB_ROOT_USER=root
      - MONGODB_DATABASE=shortener_db
      - MONGODB_USERNAME=shortener
      - MONGODB_PASSWORD=short_pass
      - MONGODB_REPLICA_SET_MODE=primary
      - MONGODB_REPLICA_SET_KEY=replicasetkey123
      - MONGODB_REPLICA_SET_NAME=shard2
    volumes:
      - 'shard2_data:/bitnami'

  mongodb-shard2-secondary:
    image: docker.io/bitnami/mongodb-sharded:7.0
    depends_on:
      - mongodb-shard2-primary
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-shard2-secondary
      - MONGODB_REPLICA_SET_MODE=secondary
      - MONGODB_PRIMARY_HOST=mongodb-shard2-primary
      - MONGODB_PRIMARY_ROOT_PASSWORD=secret
      - MONGODB_REPLICA_SET_KEY=replicasetkey123
      - MONGODB_SHARDING_MODE=shardsvr
      - MONGODB_REPLICA_SET_NAME=shard2
    volumes:
      - 'shard2_sec_data:/bitnami'

  mongodb-cfg-primary:
    image: docker.io/bitnami/mongodb-sharded:7.0
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-cfg-primary
      - MONGODB_SHARDING_MODE=configsvr
      - MONGODB_ROOT_PASSWORD=secret
      - MONGODB_ROOT_USER=root
      - MONGODB_DATABASE=shortener_db
      - MONGODB_USERNAME=shortener
      - MONGODB_PASSWORD=short_pass
      - MONGODB_REPLICA_SET_MODE=primary
      - MONGODB_REPLICA_SET_KEY=replicasetkey123
      - MONGODB_REPLICA_SET_NAME=mongo_cfg_replicaset
    volumes:
      - 'cfg_data:/bitnami'

  mongodb-cfg-secondary:
    image: docker.io/bitnami/mongodb-sharded:7.0
    depends_on:
      - mongodb-cfg-primary
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-cfg-secondary
      - MONGODB_REPLICA_SET_MODE=secondary
      - MONGODB_PRIMARY_HOST=mongodb-cfg-primary
      - MONGODB_PRIMARY_ROOT_PASSWORD=secret
      - MONGODB_REPLICA_SET_KEY=replicasetkey123
      - MONGODB_REPLICA_SET_NAME=mongo_cfg_replicaset
      - MONGODB_SHARDING_MODE=configsvr
    volumes:
      - 'cfg_sec_data:/bitnami'

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: secret
      ME_CONFIG_MONGODB_SERVER: mongodb-sharded
      ME_CONFIG_MONGODB_PORT: "27017"
    ports:
      - "8081:8081"
    depends_on:
      - mongodb-sharded

  redis-node-0:
    image: bitnami/redis-cluster:7.2
    environment:
      - REDIS_PASSWORD=redis_pass
      - REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    ports:
      - '6379:6379'
    volumes:
      - 'redis_data_0:/bitnami/redis/data'
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "$REDIS_PASSWORD", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  redis-node-1:
    image: bitnami/redis-cluster:7.2
    environment:
      - REDIS_PASSWORD=redis_pass
      - REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5
    ports:
      - '6380:6379'
    volumes:
      - 'redis_data_1:/bitnami/redis/data'
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "$REDIS_PASSWORD", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  redis-node-2:
    image: bitnami/redis-cluster:7.2
    environment:
      - REDIS_PASSWORD=redis_pass
      - REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5
    ports:
      - '6381:6379'
    volumes:
      - 'redis_data_2:/bitnami/redis/data'
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "$REDIS_PASSWORD", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  redis-node-3:
    image: bitnami/redis-cluster:7.2
    environment:
      - REDIS_PASSWORD=redis_pass
      - REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5
    ports:
      - '6382:6379'
    volumes:
      - 'redis_data_3:/bitnami/redis/data'
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "$REDIS_PASSWORD", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  redis-node-4:
    image: bitnami/redis-cluster:7.2
    environment:
      - REDIS_PASSWORD=redis_pass
      - REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5
    ports:
      - '6383:6379'
    volumes:
      - 'redis_data_4:/bitnami/redis/data'
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "$REDIS_PASSWORD", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  redis-node-5:
    image: bitnami/redis-cluster:7.2
    environment:
      - REDIS_PASSWORD=redis_pass
      - REDIS_CLUSTER_REPLICAS=1
      - REDISCLI_AUTH=redis_pass
      - REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5
      - REDIS_CLUSTER_CREATOR=yes
    ports:
      - '6384:6379'
    depends_on:
      - redis-node-0
      - redis-node-1
      - redis-node-2
      - redis-node-3
      - redis-node-4
    volumes:
      - 'redis_data_5:/bitnami/redis/data'
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "$REDIS_PASSWORD", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

volumes:
  redis_data_0:
    driver: local
  redis_data_1:
    driver: local
  redis_data_2:
    driver: local
  redis_data_3:
    driver: local
  redis_data_4:
    driver: local
  redis_data_5:
    driver: local
  shard0_data:
    driver: local
  shard0_sec_data:
    driver: local
  shard1_data:
    driver: local
  shard1_sec_data:
    driver: local
  shard2_data:
    driver: local
  shard2_sec_data:
    driver: local
  cfg_data:
    driver: local
  cfg_sec_data:
    driver: local